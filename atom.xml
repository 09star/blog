<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[星光灿烂的博客]]></title>
  <subtitle><![CDATA[忧愁时就写一首诗 快乐时就唱一支歌]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://raoxing.me/"/>
  <updated>2015-06-05T08:35:06.000Z</updated>
  <id>http://raoxing.me/</id>
  
  <author>
    <name><![CDATA[Xing Rao]]></name>
    <email><![CDATA[helloraoxing@163.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Angular学习笔记之几种常见的对话框总结]]></title>
    <link href="http://raoxing.me/2015/06/05/Angular%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%87%A0%E7%A7%8D%E5%B8%B8%E8%A7%81%E7%9A%84%E5%AF%B9%E8%AF%9D%E6%A1%86%E6%80%BB%E7%BB%93/"/>
    <id>http://raoxing.me/2015/06/05/Angular学习笔记之几种常见的对话框总结/</id>
    <published>2015-06-05T07:43:12.000Z</published>
    <updated>2015-06-05T08:35:06.000Z</updated>
    <content type="html"><![CDATA[<p>接触学习Angular这么长时间，项目里面经常碰到会使用弹出对话框（Modal或者Dialog）用起来简单使用，适合对象的创建，修改和提醒等操作。</p>
<h2 id="1_UI_Bootstrap_的modal">1 UI Bootstrap 的modal</h2><p><a href="https://angular-ui.github.io/bootstrap/" target="_blank" rel="external">UI Bootstrap</a> 是AngularUI Team 用AngularJS 编写的 Bootstrap components. 所以常见的 bootstrap 组件都可以尝试在 UI Bootstrap中寻找.<br>大概样子如此。<br><img src="/2015/06/05/Angular学习笔记之几种常见的对话框总结/uiBootstrapModal.png"></p>
<p>由于项目中会用到多个对话框，通常是使用angular 事件机制($broadcast/$on)来触发modal 的展示。所以一般架构是，view层，专门有个总的dialog.ejs(后台使用nodejs开发)里面以ng-template形式存储多个dialog</p>
<figure class="highlight erb"><figcaption><span>[html]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/ng-template"</span> <span class="attribute">id</span>=<span class="value">"dialog.XXXDialog"</span>&gt;</span><span class="javascript"></span><br><span class="line">    </span></span>&lt;%<span class="ruby"><span class="keyword">include</span> dialog.<span class="constant">XXXDialog</span>.ejs</span>%&gt;<span class="xml"><span class="javascript"></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/ng-template"</span> <span class="attribute">id</span>=<span class="value">"dialog.XXXDialog"</span>&gt;</span><span class="javascript"></span><br><span class="line">    </span></span>&lt;%<span class="ruby"><span class="keyword">include</span> dialog.<span class="constant">XXXDialog</span>.ejs</span>%&gt;<span class="xml"><span class="javascript"></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>同理，controller层，专门有dialogController 来负责监听($on)所有modal事件。 具体触发事件只需要使用$rootScope.$broadcast(“event<em>name”) 总的控制controller 内容如下：<br><figure class="highlight r"><figcaption><span>[javascript]</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.controller(<span class="string">"dialogController"</span>,[<span class="keyword">function</span>(<span class="keyword">...</span>)&#123;</span><br><span class="line">    $scope.$on(<span class="string">"new.friend"</span>,<span class="keyword">function</span>(event)&#123;</span><br><span class="line">    var modalInstance = $modal.open(&#123;</span><br><span class="line">        backdrop:<span class="string">'static'</span>,</span><br><span class="line">        templateUrl:<span class="string">'dialog.XXXDialog'</span>,// dialog.ejs 里面模板id</span><br><span class="line">        controller :<span class="string">"dialog.XXXController"</span>,//对应具体modal的controller</span><br><span class="line">        windowClass:<span class="string">"colored-header"</span>,</span><br><span class="line">        resolve : &#123; // 通过resolve 来向具体XXXController注入数据service</span><br><span class="line">            yourService:<span class="keyword">function</span>()&#123;</span><br><span class="line">                <span class="keyword">return</span> XXX ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // 其他字段参考官网</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">$scope.$on(<span class="keyword">...</span>) // 其他的触发modal 的事件</span><br><span class="line">    &#125;])</span><br></pre></td></tr></table></figure><br>具体的每个modal 的处理逻辑只需要写在相应的 controller里面即可。<br><em>_记得不要忘记</em></em>把相关的模板以及js文件 include到 页面中。</p>
<h2 id="2_angular-strap_的modal">2 angular-strap 的modal</h2><p>[AngularStrap] 是另一套为AngularJS写的Bootstrap Directives。有一些指令还是比较炫酷好看的。由于modal service名称冲突，angular-strap 里面的modal不能和ui-bootstrap 的modal一起使用。<br>使用时先引入相应的module<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">angular.<span class="keyword">module</span>(<span class="symbol">'myApp'</span>, [<span class="symbol">'mgcrea</span>.ngStrap']);</span><br></pre></td></tr></table></figure><br>个人感觉angular-strap 实现的modal service 不是太好，Modal show 的时候，在DOM生成是以兄弟节点的形式在触发Button后面插入，这样CSS样式会受到相应父节点的影响。<br>同时 modal.$hide()不提供 promise服务，无法知道$hide完整 remove的事件从而导致<a href="https://github.com/mgcrea/angular-strap/issues/864" target="_blank" rel="external">一些样式问题</a><br>。同时没有提供resolve 接口可以注入数据，所以几次使用都是直接使用继承触发modal时button所在的Controller $scope</p>
<h2 id="3_angular_material_中的_dialog">3 angular material 中的 dialog</h2><p><a href="https://material.angularjs.org/latest/#/" target="_blank" rel="external">Angular Material</a> 使用angularjs实现的基于google material design的样式组件。也是最近才发现接触的，感觉做的更是炫酷。提供$mdDialog service 效果如下：<br><img src="/2015/06/05/Angular学习笔记之几种常见的对话框总结/mdDialog.png"><br>使用起来和ui-bootstrap modal 相似，同时可以和ui-bootstrap的 modal共同使用。</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 记得在相应dialog.ejs 里面添加 ng-<span class="keyword">template</span> : dialog.<span class="type">XXXDialog</span></span><br><span class="line">// 以及生成新的 dialog.<span class="type">XXXDialogController</span></span><br><span class="line">$mdDialog.show(&#123;</span><br><span class="line">    controller: 'dialog.<span class="type">XXXDialogController</span>',</span><br><span class="line">    templateUrl: 'dialog.<span class="type">XXXDialog</span>',</span><br><span class="line">    clickOutsideToClose: <span class="literal">true</span> ,</span><br><span class="line">    resolve : &#123;</span><br><span class="line">        dataService : function()&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="type">XXX</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>先写这些，很是零碎。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>接触学习Angular这么长时间，项目里面经常碰到会使用弹出对话框（Modal或者Dialog）用起来简单使用，适合对象的创建，修改和提醒等操作。</p>
<h2 id="1_UI_Bootstrap_的modal">1 UI Bootstrap 的modal</h2><p]]>
    </summary>
    
      <category term="AngularJs" scheme="http://raoxing.me/tags/AngularJs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[mac php开发工具及环境配置]]></title>
    <link href="http://raoxing.me/2015/03/10/mac-php%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>http://raoxing.me/2015/03/10/mac-php开发工具及环境配置/</id>
    <published>2015-03-10T03:15:43.000Z</published>
    <updated>2015-03-15T15:19:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="安装MAMP环境">安装MAMP环境</h2><p>安装<a href="http://www.mamp.info/en/downloads/" target="_blank" rel="external">MAMP</a>开发环境，一键安装install Apache 2, current PHP and MySQL. </p>
<h2 id="安装phpstorm">安装phpstorm</h2><p>从<a href="https://www.jetbrains.com/phpstorm/index.html" target="_blank" rel="external">jetBrains官网</a>官网直接下载phpstorm安装。</p>
<h2 id="从svn加载项目">从svn加载项目</h2><p>之后从svn加载工程，发现一致报错  <code>Received fatal alert: handshake_failure Please check Subversion SSL settings (Settings | Version Control | Subversion | Network) Maybe you should specify SSL protocol manually - SSLv3 or TLSv1</code></p>
<p>最后经过查询找到了解决方案</p>
<pre>

1.- Go to Preferences > Project settings > Version Control > Subversion
2.- In network tab, select TLSv1
3.- In general tab, click "Clear auth cache" and it will ask you again the credentials for the svn repositories.
4.- restart phpstorm
</pre>

<h2 id="安装ecshop">安装ecshop</h2><p>把ecshop项目加载到phpstorm，进行运行配置，配置apache 服务器地址，项目路径，运行。 在浏览器输入URL ，会看到ecshop项目初始化install的配置导航，点击下一步，之后设置数据库，后台admin的账户，点击完成，即可看到ecshop默认的商城页面了。</p>
<p>当然可能会遇到php报错的问题，需要调整一下php版本，自己使用php 5.3.29 可以解决问题。</p>
<p>参考文献：</p>
<ol>
<li><a href="https://confluence.jetbrains.com/display/PhpStorm/Installing+and+Configuring+MAMP+with+PhpStorm+IDE" target="_blank" rel="external">配置环境</a></li>
<li><a href="http://intellij27.rssing.com/browser.php?indx=4975062&amp;item=3399" target="_blank" rel="external">解决svn错误</a></li>
<li><a href="http://www.cnblogs.com/heiniuhaha/archive/2011/11/11/2245594.html" target="_blank" rel="external">svn 命令更新</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="安装MAMP环境">安装MAMP环境</h2><p>安装<a href="http://www.mamp.info/en/downloads/" target="_blank" rel="external">MAMP</a>开发环境，一键安装install Apa]]>
    </summary>
    
      <category term="mamp" scheme="http://raoxing.me/tags/mamp/"/>
    
      <category term="php" scheme="http://raoxing.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu 14.04 配置LAMP开发环境]]></title>
    <link href="http://raoxing.me/2015/03/09/Ubuntu-14-04-%E9%85%8D%E7%BD%AELAMP%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://raoxing.me/2015/03/09/Ubuntu-14-04-配置LAMP开发环境/</id>
    <published>2015-03-09T05:47:31.000Z</published>
    <updated>2015-03-09T06:58:20.000Z</updated>
    <content type="html"><![CDATA[<p>阿里云新手各种活动，领了好几张优惠劵，就开始0￥免费使用ECS服务器，同时使用优惠券开通了外网带宽。配置Ubuntu 14.04 64位，准备搭个LAMP环境玩耍一番。 </p>
<h2 id="登陆">登陆</h2><p> 直接使用ssh <code>ssh root@ip_address</code>登陆即可。</p>
<h2 id="安装">安装</h2><p><a href="http://blog.csdn.net/tecn14/article/details/27515241" target="_blank" rel="external">参考这篇安装</a> 就不细说了。</p>
<p>之后在浏览器输入 公网 IP_ADDRESS，看到apache2的 Default Page 就表示apache安装成功</p>
<h2 id="遇到的问题">遇到的问题</h2><p>之后访问phpAdmin 出现错误 ： The json extension is missing. Please check your PHP configuration.</p>
<p>查询一下发现只需要前往 <code>/etc/php5/mods-available/json.ini</code> 把 <code>priority=20</code> 注释去掉，重启服务<code>service apache2 restart</code></p>
<h3 id="vim基本操作">vim基本操作</h3><p>按Esc 输入:help 查看帮助文档</p>
<ol>
<li>按Esc 之后输入 :q! 直接退出 不保存  </li>
<li>按Esc 之后输入 :wq 保存并退出 不保存 </li>
</ol>
<h2 id="其他参考">其他参考</h2><ol>
<li><a href="http://en.wikipedia.org/wiki/LAMP_(software_bundle)" target="_blank" rel="external">LAMP</a></li>
<li><a href="http://superuser.com/questions/639945/how-to-fix-the-phpmyadmin-error-json-extension-is-missing" target="_blank" rel="external">The json extension is missing错误解决</a></li>
<li><a href="http://stackoverflow.com/questions/11828270/how-to-exit-the-vim-editor" target="_blank" rel="external">how-to-exit-the-vim-editor</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>阿里云新手各种活动，领了好几张优惠劵，就开始0￥免费使用ECS服务器，同时使用优惠券开通了外网带宽。配置Ubuntu 14.04 64位，准备搭个LAMP环境玩耍一番。 </p>
<h2 id="登陆">登陆</h2><p> 直接使用ssh <code>ssh root@i]]>
    </summary>
    
      <category term="LAMP" scheme="http://raoxing.me/tags/LAMP/"/>
    
      <category term="ubuntu" scheme="http://raoxing.me/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodewebkit 打包发布程序]]></title>
    <link href="http://raoxing.me/2015/03/06/nodewebkit-%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83%E7%A8%8B%E5%BA%8F/"/>
    <id>http://raoxing.me/2015/03/06/nodewebkit-打包发布程序/</id>
    <published>2015-03-06T07:27:07.000Z</published>
    <updated>2015-03-06T08:19:24.000Z</updated>
    <content type="html"><![CDATA[<p>用nodejs+express 开发完的程序，想使用node-webkit 现在已经改名nwjs打包进行发布。 </p>
<h2 id="mac_osx">mac osx</h2><p>简单说就是把之前的程序代码，index.html，nw描述的package.json 文件打包为 app.nw 即：</p>
<p><pre><br>    zip -r -q app.nw *<br></pre><br>之后把 app.nw (当然，为了方便节省时间，你也可以不用zip 只需要把上述文件放到名称为app.nw的文件夹中也是可以的)放到之前下载好的nodewebkit.app/Contents/Resources/ 文件夹下，这样点击 原来的nodewekit.app 就可以运行自己的打包的app.nw程序了，当然可以修改添加自己程序的icon及名称。</p>
<p>直接发布 nodewebkit.app 就可以了</p>
<h2 id="window">window</h2><p>待续…</p>
<h3 id="参考链接">参考链接</h3><ol>
<li><a href="https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps" target="_blank" rel="external">nwjs github 主页How to package and distribute your apps</a></li>
<li></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>用nodejs+express 开发完的程序，想使用node-webkit 现在已经改名nwjs打包进行发布。 </p>
<h2 id="mac_osx">mac osx</h2><p>简单说就是把之前的程序代码，index.html，nw描述的package.json 文]]>
    </summary>
    
      <category term="node-webkit" scheme="http://raoxing.me/tags/node-webkit/"/>
    
      <category term="nodejs" scheme="http://raoxing.me/tags/nodejs/"/>
    
      <category term="nwjs" scheme="http://raoxing.me/tags/nwjs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs 学习笔记(二)fs-extra module]]></title>
    <link href="http://raoxing.me/2015/03/06/nodejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%BA%8C-fs-extra-module/"/>
    <id>http://raoxing.me/2015/03/06/nodejs-学习笔记-二-fs-extra-module/</id>
    <published>2015-03-06T03:01:21.000Z</published>
    <updated>2015-03-06T03:08:07.000Z</updated>
    <content type="html"><![CDATA[<p>接上篇<a href="http://raoxing.me/2015/03/05/nodejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-path/" target="_blank" rel="external">nodejs 学习笔记(一)path</a> 生成指定路径之后，需要在程序启动时候去查看这个目录是否存在，如果不存在就创建这个目录。</p>
<p>查询之后,发现可以使用 <a href="https://github.com/jprichardson/node-fs-extra" target="_blank" rel="external">node fs-extra</a> 来进行相应的操作</p>
<pre>
var fse = require('fs-extra');
var dest = 'path/to/dir';

fse.ensureDir(dest,function(err){
    console.log(err);
})
</pre>




<p>参考连接：</p>
<ol>
<li><a href="http://stackoverflow.com/questions/21194934/node-how-to-create-a-directory-if-doesnt-exist" target="_blank" rel="external">stackoverflow 问答</a></li>
<li><a href="https://github.com/jprichardson/node-fs-extra" target="_blank" rel="external">fs-extra</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>接上篇<a href="http://raoxing.me/2015/03/05/nodejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-path/" target="_blank" rel="external">node]]>
    </summary>
    
      <category term="nodejs" scheme="http://raoxing.me/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[hexo搭建博客小记]]></title>
    <link href="http://raoxing.me/2015/03/06/hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B0%8F%E8%AE%B0/"/>
    <id>http://raoxing.me/2015/03/06/hexo搭建博客小记/</id>
    <published>2015-03-06T01:36:30.000Z</published>
    <updated>2015-03-16T15:04:35.000Z</updated>
    <content type="html"><![CDATA[<p>本文记录搭建hexo过程中的零零碎碎的事情，遇到的问题，留个参考。</p>
<p>去年在老广的通知下，趁着github education活动获得了一堆优惠。<a href="https://www.namecheap.com/" target="_blank" rel="external">Namecheap</a> 申请了一个免费域名。<a href="https://www.digitalocean.com" target="_blank" rel="external">Digitial Ocean</a>搞到了几百美元的优惠。于是乎准备搞个Blog，逛了一圈，发现直接用<a href="https://pages.github.com/" target="_blank" rel="external">github pages</a> 托管静态资源这个解决方案不错，选用了<a href="http://hexo.io/" target="_blank" rel="external">Hexo Blog</a>框架。</p>
<p>Blog搭起来之后就没管它。过完年回来，想想未完成的志事。决定还要坚持下去。发现hexo已经更新到3.0版本，按照网站指导<a href="https://github.com/hexojs/hexo/wiki/Migrating-from-2.x-to-3.0" target="_blank" rel="external">从2.X整合到3.0</a> 结果发现 _config.yml 被还原了，重新配置，部署安装终于搞定。</p>
<p>Blog搭起来之后，无外乎两个方向，开始写，开始优化Blog配置。</p>
<p>优化Blog配置方面，首先解决网页请求一些访问慢的静态资源，font 还有 jquery。参考这篇文章<a href="http://www.autonavi.me/2014/09/09/Hexo%E5%8A%A0%E8%BD%BD%E8%BF%87%E6%85%A2.html" target="_blank" rel="external">HEXO个人博客速度优化</a> </p>
<p>添加了<a href="duoshuo.com">多说评论</a></p>
<p>添加了<a href="tongji.baidu.com">百度统计</a></p>
<p>使用Google Anaalytics 登陆注册，之后添加要跟踪网站，获得跟踪代码，其实只需要知道 媒体跟踪ID  一般是UA-XXXX-Y 结尾。赋值给模板_config.yml 里面的google_analytics 即可。</p>
<p>安装 sitemap插件</p>
<p>Sitemap 可方便网站管理员通知搜索引擎他们网站上有哪些可供抓取的网页。最简单的 Sitemap 形式，就是XML 文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新的时间、更改的频率以及相对于网站上其他网址的重要程度为何等），以便搜索引擎可以更加智能地抓取网站。</p>
<p>未完待续。</p>
<h2 id="参考资料">参考资料</h2><ol>
<li><a href="http://wowubuntu.com/markdown/#code" target="_blank" rel="external">Markdown 语法介绍</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>本文记录搭建hexo过程中的零零碎碎的事情，遇到的问题，留个参考。</p>
<p>去年在老广的通知下，趁着github education活动获得了一堆优惠。<a href="https://www.namecheap.com/" target="_blank" rel="]]>
    </summary>
    
      <category term="hexo" scheme="http://raoxing.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs 学习笔记(一)path]]></title>
    <link href="http://raoxing.me/2015/03/05/nodejs-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80-path/"/>
    <id>http://raoxing.me/2015/03/05/nodejs-学习笔记-一-path/</id>
    <published>2015-03-05T13:46:19.000Z</published>
    <updated>2015-03-05T14:38:26.000Z</updated>
    <content type="html"><![CDATA[<p>今天在项目中遇到问一个问题，就是想设置项目使用数据库路径为系统指定路径。由于自己的操作系统位Mac OSX，查看了一下<a href="https://developer.apple.com/library/mac/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html#//apple_ref/doc/uid/TP40010672-CH2-SW1" target="_blank" rel="external">Mac File System介绍</a>，自己做的app的数据（数据库tingodb）位置一般应该位于$HOME/Library/Application Support/APP_NAME目录下.</p>
<p>那么问题来了，我在js代码中如何设置数据库的路径呢。</p>
<p>直接设置  <code>path = &#39;~/Library/Application\ Support/APP_NAME/db&#39;</code>发现是不行的，<code>path = &#39;$HOME/Library/Application\ Support/APP_NAME/db&#39;</code>也同样不行。</p>
<p>之后发现可以使用<a href="http://nodejs.org/api/path.html" target="_blank" rel="external">node path module</a> 进行路径的操作，如何找到user home path 仍然是个问题，在终端terminal 里面直接 <code>cd ~</code> 就可以了，但是在程序中如何得到呢。经过不懈努力<a href="http://stackoverflow.com/questions/9080085/node-js-find-home-directory-in-platform-agnostic-way" target="_blank" rel="external">查找,在这个答案中找到解决方案</a><br><code>var home = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;</code> 成功拿到 user home path 。 之后问题就应迎刃而解了。<br><code>path.join(home,&#39;/Library/Application\ Support/APP_NAME/db&#39;)</code>就设置成功。</p>
<p>其他参考有用的资料：</p>
<ol>
<li><a href="http://stackoverflow.com/questions/10822574/difference-between-path-normalize-and-path-resolve-in-node-js" target="_blank" rel="external">nodejs path normalize 与 resolve的区别</a></li>
<li><a href="https://developer.apple.com/library/mac/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/MacOSXDirectories/MacOSXDirectories.html#//apple_ref/doc/uid/TP40010672-CH10-SW1" target="_blank" rel="external">OSX Library Directory Details</a></li>
<li><a href="http://www.chromium.org/user-experience/user-data-directory" target="_blank" rel="external">chromium user data directory</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天在项目中遇到问一个问题，就是想设置项目使用数据库路径为系统指定路径。由于自己的操作系统位Mac OSX，查看了一下<a href="https://developer.apple.com/library/mac/documentation/FileManagement/]]>
    </summary>
    
      <category term="nodejs" scheme="http://raoxing.me/tags/nodejs/"/>
    
  </entry>
  
</feed>